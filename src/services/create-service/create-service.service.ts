import { Inject, Injectable } from '@nestjs/common';
import { SupabaseClient } from '@supabase/supabase-js';
import { SUPABASE_REQUEST_CLIENT } from 'src/auth/providers/supabase-request.provider';
import { CreateServiceRequest } from './dto/create-service-request.dto';

@Injectable()
export class CreateServiceService {
  constructor(
    @Inject(SUPABASE_REQUEST_CLIENT) private readonly supabase: SupabaseClient,
  ) {}

  async createService(data: CreateServiceRequest) {
    const {
      error,
      data: responseData,
    }: {
      error: { message?: string } | null;
      data: {
        id: string;
        name: string;
        price: number;
        commission_rate: number;
        description: string;
        created_at: string;
      } | null;
    } = await this.supabase
      .from('services')
      .insert({
        name: data.name,
        price: data.price,
        commission_rate: data.commissionRate,
        description: data.description,
        // id and created_at are generated by Supabase/Postgres
      })
      .select()
      .single();

    if (error) {
      throw new Error(`Failed to create service: ${error.message}`);
    }

    return responseData;
  }
}
